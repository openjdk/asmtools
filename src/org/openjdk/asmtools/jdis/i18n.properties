# Copyright (c) 2014, 2025, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.

info.usage=\
Usage: java -jar asmtools.jar jdis [options] <class files>|-              decompile into jasm file(s)\n\
\   if - is provided, <stdin> is used\n\
where possible options include:
# see also shared section in asmtools/i18
info.opt.g=\
\     -g Generate a detailed output format.
info.opt.b=\
\     -best-effort Print as much information as possible despite errors; suppresses the -v option.
info.opt.gg=\
\     -gg Generate a detailed output format. This includes displaying\
\nthe pair of this_class and super_class.
info.opt.lnt=\
\     -lnt:<numbers,lines,table,all>\n Print the LineNumberTable attribute in a Code attribute:\
\n table   - print the LineNumberTable attribute as a table \
\n numbers - print numbers of source lines in inlined comments\
\n lines   - print Java source lines if a class file with LineNumberTable attribute and Java source file are in the same folder\
\n all     - print both line numbers and Java source lines in inlined comments, and LineNumberTable attribute as a table\
\nThe ''-lnt'' without parameters functions the same way as ''-lnt:all''
info.opt.lvt=\
\     -lvt:<vars,types,all>\n Print LocalVariableTable,LocalVariableTypeTable attributes in a Code attribute:\
\n vars    - print LocalVariableTable attribute\
\n types   - print LocalVariableTypeTable attribute\
\n all     - print both LocalVariableTable and LocalVariableTypeTable attributes\
\nThe ''-lvt'' without parameters functions the same way as ''-lvt:all''
info.opt.instr.offset=\
\     -pc Print instruction offsets when the output is not detailed with the options -g or -gg.
info.opt.nc=\
\     -nc Don''t print comments
info.opt.hx=\
\     -hx Generate floating-point constants in hexadecimal format.
info.opt.table=\
\     -table Print specific attributes in a table format resembling the style of the ''javap'' command.
info.opt.sysinfo=\
\     -sysinfo Show system info (path, size, date, SHA-256 hash) of class being processed
info.opt.drop=\
\     -drop:<source,classes,all>\n Discard some attributes or their groups where:\
\n source  - SourceFile attribute\
\n classes - this_class, super_class pair\
\n all     - SourceFile attribute, this_class and super_class pair\
\n The ''-drop'' without parameters functions the same way as ''-drop:all''
#info.opt.drop.ex=\
#\     -drop:<all|SourceFile,CharacterRange>\n Discard some attributes or their groups where:\
#\n all=SourceFile,CharacterRange\
#\nThe ''-drop'' without parameters functions the same way as ''-drop:all''

err.cannot.write=Cannot write to {0}

err.invalid_option=Invalid option: {0}
err.invalid_parameter_of_option=Invalid parameter \"{0}\" of option: {1}
err.option.unsupported=Not implemented yet: {0}
err.not_found=No such file: {0}
err.count.issues={0}{1}in the file: {2}
err.unknown.tag=Unknown tag in annotation \"{0}\" [0x{1}]
err.invalid.attribute.length={0}: Invalid attribute length #{1}
warn.one.attribute.required=There is more than one \"{0}\" attribute in the attributes table of a \"{1}\" structure. The last one is used.
warn.attribute.name.corrupted=The value of the attribute_name_index #{0} item is not a valid index into the constant_pool table. The attribute is ignored.
warn.attribute.name.incorrect=The attribute_name_index #{0} refers to an unknown attribute name. The attribute is ignored.
warn.attribute.type.incorrect=The constant_pool entry \"{0}\" is not of an appropriate type for the field.
warn.attribute.constantvalue.incorrect=The constantvalue_index \"{0}\" is not a valid index into the constant_pool table.
warn.attribute.constantvalue.unrecognized=Unrecognized constantvalue_index: #{0} [ {1} ]

warn.field.nametype.required=The ConstantPool[{0}] must be a CONSTANT_NameAndType_info structure with a field descriptor
err.invalid_header=Invalid Module attributes table
err.invalid_requires=Invalid requires table
err.invalid_exports=Invalid exports table
err.invalid_opens=Invalid opens table
err.invalid_uses=Invalid uses table
err.invalid_provides=Invalid provides table
err.invalid.desc=Invalid descriptor \"{0}\"
err.invalid.desc.at=Descriptor is invalid at offset \"{0}\" in \"{1}\"
err.eof=The end of the file was unexpectedly reached while reading class data
info.corrupted_cp_entry=??? The entry is missing from the constant_pool table
info.invalid_cp_entry=??? Invalid constant_pool reference
info.corrupted_bootstrap_method_ref=??? Invalid bootstrap method reference
warn.wrong.magic=The magic number identifying the class file format is expected to be {0}. The invalid magic number {1} will be ignored.
