# Copyright (c) 2014, 2025, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
info.usage=\
Usage: java -jar asmtools.jar jasm [options] <jasm source files>|-        compile into class file(s)\n\
\   if - is provided, <stdin> is used\n\
where possible options include:
# see also shared section in asmtools/i18
info.opt.nowrite=\
\     -nowrite Do not write generated class files
info.opt.strict=\
\     -strict Consider warnings as errors
info.opt.nowarn=\
\     -nowarn Do not print warnings
info.opt.cv=\
\     -cv <major.minor> Set operating class file version if not specified in the source file (by default {0}.{1})
info.opt.fixcv=\
\     -fixcv <major.minor> Override class file version in source file(s)
info.opt.fixcv.full=\
\     -fixcv <threshold-major.minor> Update class file version to major.minor if file''s version is below the threshold(<major.minor>)

err.cv_requires_arg=-cv option requires the argument <major.minor>
err.fix_cv_requires_arg=-fixcv option requires the argument either <major.minor> or <major.minor>-<major.minor>
err.invalid_major_minor_param=Invalid parameter <major.minor>
err.invalid_threshold_major_minor_param=Invalid parameter \"-fixcv '{<major.minor>-}'<major.minor>\"
err.invalid_option=Invalid option: {0}
err.byte.limit=Unspecified byte-limit

# I/O errors
err.cannot.read=Cannot read {0}
err.cannot.write=Cannot write to {0}
err.cannot.create=Cannot create {0}

# Scanner:
err.invalid.escape.char=Invalid escape character
err.eof.in.comment=Comment isn't terminated at the end of input
err.invalid.number=Invalid character "{0}" in number
err.invalid.octal.number=Invalid character in octal number
err.overflow=Numeric overflow
err.float.format=Invalid floating point format
err.eof.in.string=String isn't terminated at the end of input
err.newline.in.string=String isn't terminated at the end of line
warn.funny.char=Invalid character with code {0} in input
err.unbalanced.paren=Unbalanced parentheses
# Parser:
err.package.repeated=Package statement repeated
warn.intf.repeated=Interface {0} repeated
warn.exc.repeated=Exception repeated in throws clause
warn.record.repeated=Record attribute repeated
warn.sign.repeated=Signature repeated

err.toplevel.expected=Class, module or interface declaration expected
err.const.def.expected=Constant declaration expected
err.field.expected=Class member declaration expected
err.token.expected=\"{0}\" token is expected
err.one.of.tokens.expected=One of the tokens {0} is expected.
err.token.isnot.expected=\"{0}\" token is not expected
err.identifier.expected=Jasm identifier expected
err.one.of.two.token.expected=Either \"{0}\" or \"{1}\" token is expected
err.one.of.N.token.expected=One of \"{0}\" tokens is expected
warn.one.of.two.token.expected=Expected \"{0}\" or \"{1}\" token; interpreted as \"{2}\"
err.field.descriptor.expected=Either a field descriptor or Constant Pool index expected, got {0}
err.class.name.expected=Either a class name or Constant Pool index expected, got {0}
err.module.name.expected=Either a module name or Constant Pool index expected, got {0}
err.package.name.expected=Either package name or Constant Pool index expected, got {0}
err.name.expected=Either name or Constant Pool index expected, got {0}
err.int.expected=Integer expected
err.value.expected=Value expected near \"{0}\"
err.subtag.expected=Subtag expected
warn.cannot.delete.class.cell=Cannot delete Constant Pool entry \"{0}\" because only class cells are accepted
err.wrong.sourcefile.ref= SourceFile attribute incorrectly points to the ConstantPool

# SourceDebugExtension
warn.empty.debug.extension=The SourceDebugExtension attribute has the empty debug_extension structure.

#Local var index  #name_index:#descriptor_index; [ var index name:descriptor; ]
#Local type index  #name_index:#signature_index; [ var index name:signature; ]
err.locvar.expected=A valid index into the local variable array of the current frame expected
err.locvar.wrong.index=The index in the local variable array \"{0}\" is not in the range [0..{1}] [0..Code_attribute.max_locals-1]
err.locvar.unknown.field.descriptor=Valid field descriptor of the local variable \"{0}\" expected instead of \"{1}\"
warn.loctype.wrong.field.signature=Invalid field signature found for local variable in slot \"{0}\": \"{1}\"
err.locvar.slot.occupied=The slot \"{0}\" is occupied by another local variable
err.locvar.undecl=Local variable isn't declared for the slot \"{0}\"
err.fieldType.undecl=Field type isn't declared for the slot \"{0}\"

warn.locvar.ambiqous=endvar {0}; expected for the local variable
warn.loctype.ambiqous=endtype {0}; expected for the local variable

#
warn.multiple.inherit=Multiple inheritance is not supported
err.const.undecl=Constant #{0} not declared
err.const.redecl=Constant Pool entry {0} has been redeclared or overlaps with entry {1}
warn.const.fill=Missing Constant Pool entry(ies) {0} might be auto-filled with Utf8[null] 
warn.const0.redecl=Re-declaration of Constant #0 cannot be written to the class file
err.extra.attribute=There may be at most one  \"{0}\" attribute in the attributes table of a \"{1}\" structure.
warn.redeclared.attribute=The new attribute \"{0}\" overwrites an already declared one in the \"{1}\" structure.
warn.extra.attribute=The \"{0}\" attribute is already declared in the constant pool structure. A new value \"{1}\" is used.

err.both.nesthost.nestmembers.found=The attribute table of a ClassFile structure must not contain both a NestMembers attribute and a NestHost attribute
warn.no.components.in.record.attribute=Record should have at least one component
warn.modifiers.ignored=The class access modifier(s) {0} ignored

err.neg.forbidden=Negative integer is not allowed
err.value.large={0} value {1} does not fit in {2}
err.array.type.expected=Array type code expected
err.wrong.mnemocode=Invalid mnemocode ({0})
err.default.redecl=Default statement already declared in this table
err.long.switchtable=Switch table is too long {0}
err.io.exception=I/O error in {0}
err.wrong.tag=Wrong tag: {0} expected
err.wrong.tag2=Wrong tag: Either {0} or {1} expected
warn.wrong.tag=Wrong tag: {0} expected
warn.wrong.tag2=Wrong tag: Either {0} or {1} expected

err.constant.kind.expected=Expected one of the valid constant kinds from the constant pool

# Code Gen:
err.label.redecl=Label {0} redeclared
err.label.undecl=Label {0} not declared
err.label.expected=Label expected

err.trap.tryredecl=<try {0}> redeclared
err.trap.endtryredecl=<endtry {0}> redeclared
err.trap.notry=No <try {0}> found
err.trap.noendtry=No <endtry {0}> found
warn.trap.notref=No <catch {0}> declared

err.msig.malformed=Malformed method signature at position {0}. {1}
err.no.classname=Class name isn't defined
warn.msig.more255=Number of parameters too large ({0}>255)

warn.repeated.modifier=Ambiguous use of similar modifiers
#Interface/class
warn.value.object.defined=Class file version {0} does not conform to the new kind of objects; expected version {1}
warn.invalid.modifier.interface.set=\"{0}\": If the ACC_INTERFACE flag is set, the ACC_FINAL, ACC_SUPER, ACC_ENUM, and ACC_MODULE flags must not be set.
warn.invalid.modifier.interface.set.vo=\"{0}\": If the ACC_INTERFACE flag is set, the ACC_FINAL, ACC_IDENTITY, ACC_ENUM, and ACC_MODULE flags must not be set.
warn.invalid.modifier.not.interface.set=\"{0}\": If the ACC_INTERFACE flag is not set ACC_ANNOTATION, and ACC_MODULE flags must not be set.
warn.invalid.modifier.not.interface.set.vo=\"{0}\": If the ACC_INTERFACE flag is not set a value class must have at least one of its ACC_FINAL, ACC_IDENTITY, or ACC_ABSTRACT flags set
warn.invalid.modifier.int.abs=\"{0}\": If the ACC_INTERFACE flag is set, the ACC_ABSTRACT flag must also be set
warn.invalid.modifier.class=Invalid modifier(s) for a class: \"{0}\"
warn.invalid.modifier.class.finabs=\"{0}\": Class cannot be both abstract and final
# Field
warn.invalid.modifier.intfield=\"{0}\": Interface field must be ACC_PUBLIC, ACC_STATIC, and ACC_FINAL only and may have ACC_STRICT_INIT or ACC_SYNTHETIC flag set
warn.invalid.modifier.for.value=\"{0}\": Each field of a value class must have at least one of its ACC_STATIC or ACC_STRICT_INIT flags set
warn.repeat.signature.field=Signature attribute repeated
warn.invalid.modifier.field=Invalid modifier(s) for a field {0}
warn.invalid.modifier.acc=\"{0}\": Each field of a class may have at most one of its ACC_PUBLIC, ACC_PRIVATE, and ACC_PROTECTED flags set
warn.invalid.modifier.fiva=\"{0}\": Each field of a class must not have both its ACC_FINAL and ACC_VOLATILE flags set
# Methods
warn.invalid.modifier.mth=Invalid modifier(s) for a method {0}
warn.init.in_int=<init> method cannot be an interface method
warn.clinit.static=In a class file whose version number is 51.0 or above, a method whose name is <clinit> must have its ACC_STATIC flag set {0}
warn.invalid.modifier.method=Methods of interfaces  must not have ACC_PROTECTED, ACC_FINAL, ACC_SYNCHRONIZED and ACC_NATIVE flags set {0}
warn.invalid.modifier.intmth.less.52=In a class file whose version number is less than 52.0, each method of interface must be abstract public only {0}
warn.invalid.modifier.intmth.is.52=In a class file whose version number is 52.0 or above, each method of an interface must have exactly one of its ACC_PUBLIC and ACC_PRIVATE flags set {0}
warn.invalid.modifier.init=Invalid modifier(s) for <init> method {0}
warn.invalid.modifier.abst=Invalid modifier(s) for abstract method {0}
warn.invalid.modifier.mth.acc=Each method of a class may have at most one of its ACC_PUBLIC, ACC_PRIVATE, and ACC_PROTECTED flags set {0}
warn.invalid.modifier.strict=If a method of a class or interface (whose major version number is at least 46 and at most 60) has its ACC_ABSTRACT flag set, it must not have its ACC_STRICT flag set
#Code attribute
warn.instruction.operand.value.overflow={0} - The argument {2} of the ''{1}'' instruction is written. It is larger than allowed {3}

# Inner class
warn.invalid.modifier.innerclass=Invalid modifier(s) for an inner class {0}
warn.invalid.modifier.innerclasses=Modifier(s) are ignored as they cannot be applied to a group of inner classes
warn.no.classes.in.innnerclasses=InnerClasses group should have at least one inner class
warn.both.modifiers.apply= Combined \"{0}\" modifiers apply to the InnerClass

# Stack frame
err.invalid.offset.frame.type=Offset value {0} is not valid  for the \"{1}\" entry type
err.no.stack.map=Stack map element for the \"{0}\" entry type is absent
err.no.locals.map=Locals map element for the \"{0}\" entry type is absent
err.should.be.only.one.stack.map.element=Should be only one stack map element for the \"{0}\" entry type
err.unexpected.stack.maps=There are unexpected stack maps for the \"{0}\" entry type
err.unexpected.locals.maps=There are unexpected locals maps for the \"{0}\" entry type
err.more.locals.map.elements=There are more than locals map elements for the \"append_frame\" entry type
err.itemtype.expected=StackMap entry type expected instead of {0}

err.stackmap.entity.repeated={0} redeclared
err.stackmap.entry.type.not.set=StackMap entry type is not set
err.invalid.stack.frame.type=Unknown entry type \"{0}\" of the StackMapTable
err.stackmaptable.repeated=A method''s Code attribute already has a StackMapTable attribute

err.stackmap.map.eligible={0} are only eligible in stack_map_frame {1}
#
err.stackmap.expected={0} is expected
warn.stackmap.expected={0} is expected
warn.stackmap.redeclared=The {0} overwrites an already declared one.
err.base.frame.expected=base_frame is expected
err.larvar.frame.expected=early_larval_frame must be declared before the wrapped base_frame.

err.version.expected=class file version expected
err.invalid.innerclass=Invalid declaration of Inner Class
err.bootstrap.arg.expected=BootstrapMethod argument is expected
err.bootstrap.arg.is.not.expected=BootstrapMethod argument is not expected
warn.bootstrapmethod.attr.bad=Bad bootstrap method attribute index {0}
warn.bootstrapmethod.attr.expected=Invoke dynamic \"{0}\" has undefined method attribute index

err.invalid.paramnum=Invalid Parameter Number: {0}
err.duplicate.paramnum=Duplicate Parameter Number: {0}
err.paramname.constnum.invaltype=ParameterName CPX at {0} is not a ConstantString
err.paramname.token.unexpected=Incorrect ParamName, unrecognized token: \"{0}\"

#LineNumber table
err.expected.linetable=The LineNumberTable format is incorrect; \"{0}\" is expected
#LocalValue table
err.header.locvars=The table header is incorrect; \"Start Length Slot Name {0}\" is expected
err.header.expected.locvars=The table header is expected: \"Start Length Slot Name {0}\"
err.expected.locvars=The {0} format is incorrect; {1} is expected

# annotations Errors
err.incorrect.annot.class=Incorrect Annotation (class), expected class name or CPX), got \"{0}\"
err.incorrect.annot.enum=Incorrect Annotation (enum), expected type field IDENT, \"{0}\"
err.incorrect.annot.enum.cpx==Incorrect Annotation (enum), expected type field CPX
err.incorrect.annot.token=Incorrect Annotation, unrecognized token: \"{0}\"
err.incorrect.annotation=Incorrect Annotation ({0}), expected {1}, got \"{2}\"
err.incorrect.annot.keyword=Incorrect Annotation keyword \"{0}\"
err.incorrect.typeannot.target=Incorrect TypeAnnotation target \"{0}\"
err.incorrect.typeannot.targtype.string=Incorrect TypeAnnotation \"{0}\" argument: (expected String),  \"{1}\"
err.incorrect.typeannot.targtype.int=Incorrect TypeAnnotation \"{0}\" argument: (expected Integer),  \"{1}\"
err.incorrect.typeannot.pathentry=Incorrect TypeAnnotation TargetPath PathEntry \"{0}\"
err.incorrect.typeannot.pathentry.argindex=Incorrect TypeAnnotation TargetPath PathEntry ArgIndex (expected Integer),  \"{0}\"

# moduleContent Errors
warn.default.cfv=Class file version not specified in file or by -cv parameter. Defaulting to version \"{0}\"
warn.isset.cfv=The class file version is set to {0} using the \"-fixcv {1}\" option.
err.module.statement.expected= Module statement expected
err.requires.expected=Module statement \"requires [transitive | static | mandated | synthetic] ModuleName;\" expected
err.exports.expected=Module statement \"exports [mandated | synthetic] PackageName [to ModuleName(1)[,ModuleName(2)[...]]];\" expected
err.provides.expected=Module statement \"provides ClassName with ClassName(1)[,ClassName(2)[...]]];\" expected
err.opens.expected=Module statement \"opens [mandated | synthetic] PackageName [to ModuleName(1)[,ModuleName(2)[...]]];\" expected
err.uses.expected=Module statement \"uses ClassName;\" expected

#
warn.dot.will.be.converted=Forward slash \"/\" expected instead of dot \".\". The dot is replaced by \"/\"

# Compiler Errors
err.constcell.empty.nameInfo={0} emptyInfo
err.constcell.null.val=Constant Pool Cell {0} without value
err.constcell.invarg=Cell[{0}] has #{1}
err.entity.not.in.cp=\"{0}\" not found in Constant Pool

err.constcell.is.undef=Const Cell has undefined Constant pool index and null value
err.constcell.is.null=ConstCell.value can''t be null
err.values.not.eq=Seeking value {0} is not equal to found {1}
err.instr.null.arg=Null arg for {0}
err.instr.wrong.arg={0} has the wrong index #{1} into the Constant Pool
warn.instr.wrong.arg={0} has the wrong index #{1} into the Constant Pool
err.instr.arg.long=Too long argument of {0}: {1}
err.instr.opc.len={0} has wrong length {1}
err.instr.opc.unknown={0} has an unknown type
err.cpindex.notfound=Constant Pool index {0} is not found

err.instr.oversize=The length of the {0} instruction {1} exceeds the allowed limit of {2} bytes

# Common errors
err.obj.is.null=Fatal Error: Object reference \"{0}\" is null
err.invalid.type=Invalid type of Constant Pool Constant {0}
