class org/openjdk/asmtools/attribute/StackMapTable/data/StackMapData {
  0xCAFEBABE;
  0;                                       // minor version
  69;                                      // version
  [] {                                     // Constant Pool
    ;                                      // first element is empty
    Method #2 #3;                          // #1
    Class #4;                              // #2
    NameAndType #5 #6;                     // #3
    Utf8 "java/lang/Object";               // #4
    Utf8 "<init>";                         // #5
    Utf8 "()V";                            // #6
    String #8;                             // #7
    Utf8 "string";                         // #8
    Field #10 #11;                         // #9
    Class #12;                             // #10
    NameAndType #13 #14;                   // #11
    Utf8 "org/openjdk/asmtools/attribute/StackMapTable/data/StackMapData";  // #12
    Utf8 "fldS";                           // #13
    Utf8 "Ljava/lang/String;";             // #14
    Field #10 #16;                         // #15
    NameAndType #17 #14;                   // #16
    Utf8 "fldFS";                          // #17
    Method #2 #19;                         // #18
    NameAndType #20 #21;                   // #19
    Utf8 "toString";                       // #20
    Utf8 "()Ljava/lang/String;";           // #21
    Class #23;                             // #22
    Utf8 "java/lang/ArithmeticException";  // #23
    Field #25 #26;                         // #24
    Class #27;                             // #25
    NameAndType #28 #29;                   // #26
    Utf8 "java/lang/System";               // #27
    Utf8 "out";                            // #28
    Utf8 "Ljava/io/PrintStream;";          // #29
    String #31;                            // #30
    Utf8 "frame";                          // #31
    Method #33 #34;                        // #32
    Class #35;                             // #33
    NameAndType #36 #37;                   // #34
    Utf8 "java/io/PrintStream";            // #35
    Utf8 "println";                        // #36
    Utf8 "(Ljava/lang/String;)V";          // #37
    Float 0x42C80000;                      // #38
    Method #40 #41;                        // #39
    Class #42;                             // #40
    NameAndType #43 #44;                   // #41
    Utf8 "java/lang/Math";                 // #42
    Utf8 "round";                          // #43
    Utf8 "(F)I";                           // #44
    InvokeDynamic 0s #46;                  // #45
    NameAndType #47 #48;                   // #46
    Utf8 "makeConcatWithConstants";        // #47
    Utf8 "(I)Ljava/lang/String;";          // #48
    Float 0x4048F5C3;                      // #49
    InvokeDynamic 1s #46;                  // #50
    Float 0x41200000;                      // #51
    Float 0x42DC0000;                      // #52
    Double 0x4059000000000000;;            // #53
    Method #40 #56;                        // #55
    NameAndType #43 #57;                   // #56
    Utf8 "(D)J";                           // #57
    InvokeDynamic 2s #59;                  // #58
    NameAndType #47 #60;                   // #59
    Utf8 "(J)Ljava/lang/String;";          // #60
    Double 0x4058FF5C28F5C28F;;            // #61
    InvokeDynamic 3s #64;                  // #63
    NameAndType #47 #65;                   // #64
    Utf8 "(D)Ljava/lang/String;";          // #65
    String #67;                            // #66
    Utf8 "chop_frame";                     // #67
    String #69;                            // #68
    Utf8 "_frame_";                        // #69
    Method #33 #71;                        // #70
    NameAndType #36 #72;                   // #71
    Utf8 "(D)V";                           // #72
    String #74;                            // #73
    Utf8 "n_frame";                        // #74
    InvokeDynamic 4s #76;                  // #75
    NameAndType #47 #77;                   // #76
    Utf8 "(Ljava/lang/String;CI)Ljava/lang/String;";  // #77
    Class #79;                             // #78
    Utf8 "java/lang/String";               // #79
    Method #2 #81;                         // #80
    NameAndType #82 #83;                   // #81
    Utf8 "hashCode";                       // #82
    Utf8 "()I";                            // #83
    Class #85;                             // #84
    Utf8 "java/lang/RuntimeException";     // #85
    String #87;                            // #86
    Utf8 "Test exception";                 // #87
    Method #84 #89;                        // #88
    NameAndType #5 #37;                    // #89
    String #91;                            // #90
    Utf8 "positive";                       // #91
    String #93;                            // #92
    Utf8 "non-positive";                   // #93
    String #95;                            // #94
    Utf8 "Computing result";               // #95
    Method #10 #3;                         // #96
    Method #10 #98;                        // #97
    NameAndType #99 #100;                  // #98
    Utf8 "generateFrames";                 // #99
    Utf8 "(I)V";                           // #100
    String #102;                           // #101
    Utf8 "test";                           // #102
    Method #10 #104;                       // #103
    NameAndType #105 #106;                 // #104
    Utf8 "complexMethod";                  // #105
    Utf8 "(ILjava/lang/Object;)I";         // #106
    Method #10 #108;                       // #107
    NameAndType #109 #110;                 // #108
    Utf8 "generateFullFrame";              // #109
    Utf8 "(I)I";                           // #110
    Field #10 #112;                        // #111
    NameAndType #113 #114;                 // #112
    Utf8 "fldL";                           // #113
    Utf8 "J";                              // #114
    Utf8 "fldI";                           // #115
    Utf8 "I";                              // #116
    Utf8 "ConstantValue";                  // #117
    Integer 0x00000000;                    // #118
    Utf8 "Code";                           // #119
    Utf8 "StackMapTable";                  // #120
    Class #122;                            // #121
    Utf8 "java/lang/Throwable";            // #122
    Utf8 "main";                           // #123
    Utf8 "([Ljava/lang/String;)V";         // #124
    Utf8 "<clinit>";                       // #125
    Utf8 "BootstrapMethods";               // #126
    String #128;                           // #127
    Utf8 "item_frame\u0001";               // #128
    String #130;                           // #129
    Utf8 "item_frame_\u0001";              // #130
    String #132;                           // #131
    Utf8 "_frame: \u0001";                 // #132
    String #134;                           // #133
    Utf8 "Before chop_frame: \u0001";      // #134
    String #136;                           // #135
    Utf8 "\u0001: \u0001\u0001";           // #136
    MethodHandle 6b #138;                  // #137
    Method #139 #140;                      // #138
    Class #141;                            // #139
    NameAndType #47 #142;                  // #140
    Utf8 "java/lang/invoke/StringConcatFactory";  // #141
    Utf8 "(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;";  // #142
    Utf8 "InnerClasses";                   // #143
    Class #145;                            // #144
    Utf8 "java/lang/invoke/MethodHandles$Lookup";  // #145
    Class #147;                            // #146
    Utf8 "java/lang/invoke/MethodHandles";  // #147
    Utf8 "Lookup";                         // #148
  }

  0x0021;                                  // access
  #10;                                     // this_cpx
  #2;                                      // super_cpx

  [] {                                     // Interfaces
  }                                        // end of Interfaces

  [] {                                     // Fields
    {                                      // field
      0x0018;                              // access
      #115;                                // name_index
      #116;                                // descriptor_index
      [] {                                 // Attributes
        Attr(#117) {                       // ConstantValue
          #118;
        }                                  // end of ConstantValue
      }                                    // end of Attributes
    }
    ;
    {                                      // field
      0x0008;                              // access
      #113;                                // name_index
      #114;                                // descriptor_index
      [] {                                 // Attributes
      }                                    // end of Attributes
    }
    ;
    {                                      // field
      0x0004;                              // access
      #13;                                 // name_index
      #14;                                 // descriptor_index
      [] {                                 // Attributes
      }                                    // end of Attributes
    }
    ;
    {                                      // field
      0x0011;                              // access
      #17;                                 // name_index
      #14;                                 // descriptor_index
      [] {                                 // Attributes
        Attr(#117) {                       // ConstantValue
          #7;
        }                                  // end of ConstantValue
      }                                    // end of Attributes
    }
  }                                        // end of Fields

  [] {                                     // Methods
    {                                      // method
      0x0001;                              // access
      #5;                                  // name_index
      #6;                                  // descriptor_index
      [] {                                 // Attributes
        Attr(#119) {                       // Code
          2;                               // max_stack
          1;                               // max_locals
          Bytes[]{
            0x2A 0xB7 0x00 0x01 0x2A 0x12 0x07 0xB5 0x00 0x09 0x2A 0x12;
            0x07 0xB5 0x00 0x0F 0xB1;
          }
          [] {                             // Traps
          }                                // end of Traps
          [] {                             // Attributes
          }                                // end of Attributes
        }                                  // end of Code
      }                                    // end of Attributes
    }
    ;
    {                                      // method
      0x0001;                              // access
      #99;                                 // name_index
      #100;                                // descriptor_index
      [] {                                 // Attributes
        Attr(#119) {                       // Code
          5;                               // max_stack
          10;                              // max_locals
          Bytes[]{
            0x03 0x3D 0x01 0x4E 0x04 0x1C 0x6C 0x3D 0x2D 0xB6 0x00 0x12;
            0x57 0xA7 0x00 0x1F 0x3A 0x04 0xBB 0x00 0x02 0x59 0xB7 0x00;
            0x01 0x4E 0x2D 0xB6 0x00 0x12 0x57 0xA7 0x00 0x0D 0x3A 0x05;
            0x2D 0xB6 0x00 0x12 0x57 0x19 0x05 0xBF 0x1C 0x9A 0x00 0x05;
            0x01 0x4E 0x1C 0xAB 0x00 0x00 0x00 0x24 0x00 0x00 0x00 0x02;
            0x00 0x00 0x00 0x01 0x00 0x00 0x00 0x19 0x00 0x00 0x00 0x02;
            0x00 0x00 0x00 0x24 0xBB 0x00 0x02 0x59 0xB7 0x00 0x01 0x4E;
            0xA7 0x00 0x03 0x1B 0x9A 0x00 0x0B 0xB2 0x00 0x18 0x12 0x1E;
            0xB6 0x00 0x20 0x1B 0x04 0xA0 0x00 0x1A 0x10 0x2A 0x36 0x04;
            0xB2 0x00 0x18 0x15 0x04 0x12 0x26 0xB8 0x00 0x27 0x68 0xBA;
            0x00 0x2D 0x00 0x00 0xB6 0x00 0x20 0x1B 0x05 0xA0 0x00 0x37;
            0x03 0x36 0x04 0x03 0x36 0x05 0x15 0x05 0x11 0x0B 0xB8 0xA2;
            0x00 0x1C 0x12 0x31 0x38 0x06 0x15 0x04 0x17 0x06 0x12 0x26;
            0xB8 0x00 0x27 0x86 0x6A 0x8B 0x60 0x36 0x04 0x84 0x05 0x01;
            0xA7 0xFF 0xE2 0xB2 0x00 0x18 0x15 0x04 0xBA 0x00 0x32 0x00;
            0x00 0xB6 0x00 0x20 0x12 0x33 0xB8 0x00 0x27 0x36 0x04 0x1B;
            0x06 0xA0 0x00 0x27 0x12 0x34 0xB8 0x00 0x27 0x36 0x05 0x14;
            0x00 0x35 0xB8 0x00 0x37 0x37 0x06 0xB2 0x00 0x18 0x15 0x05;
            0x85 0x16 0x06 0x61 0x15 0x04 0x85 0x69 0xBA 0x00 0x3A 0x00;
            0x00 0xB6 0x00 0x20 0x1B 0x07 0xA0 0x00 0x27 0x10 0x32 0x15;
            0x04 0x68 0x36 0x05 0x14 0x00 0x3D 0x15 0x04 0x87 0x6B 0x39;
            0x06 0xB2 0x00 0x18 0x15 0x05 0x87 0x18 0x06 0x63 0xBA 0x00;
            0x3F 0x00 0x00 0xB6 0x00 0x20 0xA7 0x00 0x0B 0xB2 0x00 0x18;
            0x12 0x42 0xB6 0x00 0x20 0x1B 0x08 0xA0 0x00 0x60 0x03 0x36;
            0x05 0x03 0x36 0x06 0x15 0x06 0x11 0x09 0xC4 0xA2 0x00 0x1D;
            0x12 0x31 0x38 0x07 0x15 0x05 0x17 0x07 0x15 0x06 0x86 0xB8;
            0x00 0x27 0x86 0x6A 0x8B 0x60 0x36 0x05 0x84 0x06 0x01 0xA7;
            0xFF 0xE1 0x15 0x05 0x10 0x64 0xA4 0x00 0x0E 0xB2 0x00 0x18;
            0x12 0x44 0xB6 0x00 0x20 0xA7 0x00 0x26 0x15 0x05 0x10 0x32;
            0xA2 0x00 0x1F 0x10 0x32 0x15 0x04 0x68 0x36 0x06 0x14 0x00;
            0x3D 0x15 0x04 0x87 0x6B 0x39 0x07 0xB2 0x00 0x18 0x15 0x06;
            0x87 0x18 0x07 0x63 0xB6 0x00 0x46 0x1B 0x10 0x06 0xA0 0x00;
            0x20 0x12 0x49 0x3A 0x05 0x10 0x46 0x36 0x06 0x10 0x64 0x36;
            0x07 0xB2 0x00 0x18 0x19 0x05 0x15 0x06 0x15 0x07 0xBA 0x00;
            0x4B 0x00 0x00 0xB6 0x00 0x20 0x03 0x36 0x05 0x01 0x3A 0x06;
            0x04 0x15 0x05 0x6C 0x36 0x05 0x19 0x06 0xB6 0x00 0x12 0x57;
            0xA7 0x00 0x22 0x3A 0x07 0xBB 0x00 0x02 0x59 0xB7 0x00 0x01;
            0x3A 0x06 0x19 0x06 0xB6 0x00 0x12 0x57 0xA7 0x00 0x0E 0x3A;
            0x09 0x19 0x06 0xB6 0x00 0x12 0x57 0x19 0x09 0xBF 0x15 0x05;
            0x9A 0x00 0x06 0x01 0x3A 0x06 0x1C 0xAB 0x00 0x00 0x00 0x25;
            0x00 0x00 0x00 0x02 0x00 0x00 0x00 0x01 0x00 0x00 0x00 0x19;
            0x00 0x00 0x00 0x02 0x00 0x00 0x00 0x25 0xBB 0x00 0x02 0x59;
            0xB7 0x00 0x01 0x3A 0x06 0xA7 0x00 0x03 0xB1;
          }
          [] {                             // Traps
               4    8   16  22;
               4    8   34   0;
              16   26   34   0;
              34   36   34   0;
             420  426  435  22;
             420  426  455   0;
             435  446  455   0;
             455  457  455   0;
          }                                // end of Traps
          [] {                             // Attributes
            Attr(#120) {                   // StackMapTable
              [] {                         // 
                246b, []{#11; #16}, {      // early_larval_frame
                  255b, 16, []{O,#10; I; I; O,#2}, []{O,#22};  // full_frame
                };
                246b, []{#11; #16}, {      // early_larval_frame
                  81b, []z{O,#121};        // same_locals_1_stack_item_frame
                };
                246b, []{#26; #16}, {      // early_larval_frame
                  9b;                      // same_frame
                };
                5b;                        // same_frame
                25b;                       // same_frame
                10b;                       // same_frame
                11b;                       // same_frame
                27b;                       // same_frame
                246b, []{}, {              // early_larval_frame
                  253b, 10, []z{I; I};     // append_frame 2
                };
                250b, 32;                  // chop_frame 1
                250b, 12;                  // chop_frame 1
                252b, 47, []z{I};          // append_frame 1
                40b;                       // same_frame
                7b;                        // same_frame
                253b, 10, []z{I; I};       // append_frame 2
                246b, []{}, {              // early_larval_frame
                  250b, 33;                // chop_frame 1
                };
                17b;                       // same_frame
                250b, 34;                  // chop_frame 1
                34b;                       // same_frame
                255b, 20, []{O,#10; I; I; O,#2; I; I; O,#2}, []{O,#22};  // full_frame
                83b, []z{O,#121};          // same_locals_1_stack_item_frame
                10b;                       // same_frame
                7b;                        // same_frame
                25b;                       // same_frame
                246b, []{#11; #16; #26; #112}, {  // early_larval_frame
                  11b;                     // same_frame
                };
              }
            }                              // end of StackMapTable
          }                                // end of Attributes
        }                                  // end of Code
      }                                    // end of Attributes
    }
    ;
    {                                      // method
      0x0001;                              // access
      #105;                                // name_index
      #106;                                // descriptor_index
      [] {                                 // Attributes
        Attr(#119) {                       // Code
          3;                               // max_stack
          7;                               // max_locals
          Bytes[]{
            0x03 0x3E 0x04 0x36 0x04 0x01 0x3A 0x05 0x1B 0x9E 0x00 0x26;
            0x1B 0x04 0x60 0x3E 0x2C 0xC1 0x00 0x4E 0x99 0x00 0x13 0x2C;
            0xC0 0x00 0x4E 0x3A 0x05 0x19 0x05 0xB6 0x00 0x50 0x36 0x04;
            0x15 0x04 0xAC 0x1D 0x05 0x68 0x36 0x04 0xA7 0x00 0x3C 0x1B;
            0x02 0xA0 0x00 0x15 0x1B 0x74 0x3E 0x1D 0x06 0x60 0x36 0x04;
            0xBB 0x00 0x54 0x59 0x12 0x56 0xB7 0x00 0x58 0xBF 0x03 0x36;
            0x06 0x15 0x06 0x05 0xA2 0x00 0x1C 0x1D 0x15 0x06 0x60 0x3E;
            0x1D 0x04 0xA4 0x00 0x0C 0x1D 0x15 0x06 0x64 0x36 0x04 0xA7;
            0x00 0x09 0x84 0x06 0x01 0xA7 0xFF 0xE4 0xA7 0x00 0x0E 0x3A;
            0x06 0x19 0x06 0x3A 0x05 0x1D 0x08 0x60 0x36 0x04 0x1D 0x15;
            0x04 0x60 0xAC;
          }
          [] {                             // Traps
               8   38  107  84;
              39  104  107  84;
          }                                // end of Traps
          [] {                             // Attributes
            Attr(#120) {                   // StackMapTable
              [] {                         // 
                254b, 39, []z{I; I; O,#2};  // append_frame 3
                7b;                        // same_frame
                22b;                       // same_frame
                246b, []{#11; #16; #26; #112}, {  // early_larval_frame
                  252b, 2, []z{I};         // append_frame 1
                };
                24b;                       // same_frame
                250b, 5;                   // chop_frame 1
                246b, []{#11; #16; #26; #112}, {  // early_larval_frame
                  66b, []z{O,#84};         // same_locals_1_stack_item_frame
                };
                10b;                       // same_frame
              }
            }                              // end of StackMapTable
          }                                // end of Attributes
        }                                  // end of Code
      }                                    // end of Attributes
    }
    ;
    {                                      // method
      0x0001;                              // access
      #109;                                // name_index
      #110;                                // descriptor_index
      [] {                                 // Attributes
        Attr(#119) {                       // Code
          3;                               // max_stack
          6;                               // max_locals
          Bytes[]{
            0x03 0x3D 0x01 0x4E 0x03 0x36 0x04 0x1B 0x9E 0x00 0x11 0x12;
            0x5A 0x4E 0x04 0x36 0x04 0x2D 0xB6 0x00 0x50 0x3D 0xA7 0x00;
            0x11 0x1B 0x05 0x68 0x3D 0xBB 0x00 0x54 0x59 0x12 0x5C 0xB7;
            0x00 0x58 0xBF 0xA7 0x00 0x0E 0x3A 0x05 0x19 0x05 0x4E 0x03;
            0x36 0x04 0x1B 0x74 0x3D 0x15 0x04 0x99 0x00 0x07 0x1C 0x04;
            0x60 0xAC 0xB2 0x00 0x18 0x12 0x5E 0xB6 0x00 0x20 0x1C 0xAC;
          }
          [] {                             // Traps
               7   39   42  84;
          }                                // end of Traps
          [] {                             // Attributes
            Attr(#120) {                   // StackMapTable
              [] {                         // 
                246b, []{#11; #16; #26; #112}, {  // early_larval_frame
                  254b, 25, []z{I; O,#2; I};  // append_frame 3
                };
                246b, []{#11; #16; #26}, {  // early_larval_frame
                  13b;                     // same_frame
                };
                246b, []{#11; #16}, {      // early_larval_frame
                  66b, []z{O,#84};         // same_locals_1_stack_item_frame
                };
                246b, []{#11}, {           // early_larval_frame
                  10b;                     // same_frame
                };
                246b, []{}, {              // early_larval_frame
                  8b;                      // same_frame
                };
              }
            }                              // end of StackMapTable
          }                                // end of Attributes
        }                                  // end of Code
      }                                    // end of Attributes
    }
    ;
    {                                      // method
      0x0009;                              // access
      #123;                                // name_index
      #124;                                // descriptor_index
      [] {                                 // Attributes
        Attr(#119) {                       // Code
          3;                               // max_stack
          3;                               // max_locals
          Bytes[]{
            0xBB 0x00 0x0A 0x59 0xB7 0x00 0x60 0x4C 0x03 0x3D 0x1C 0x10;
            0x06 0xA3 0x00 0x0E 0x2B 0x1C 0xB6 0x00 0x61 0x84 0x02 0x01;
            0xA7 0xFF 0xF2 0x2B 0x03 0x12 0x65 0xB6 0x00 0x67 0x57 0x2B;
            0x10 0x17 0xB6 0x00 0x6B 0x57 0xB1;
          }
          [] {                             // Traps
          }                                // end of Traps
          [] {                             // Attributes
            Attr(#120) {                   // StackMapTable
              [] {                         // 
                246b, []{}, {              // early_larval_frame
                  253b, 10, []z{O,#10; I};  // append_frame 2
                };
                250b, 16;                  // chop_frame 1
              }
            }                              // end of StackMapTable
          }                                // end of Attributes
        }                                  // end of Code
      }                                    // end of Attributes
    }
    ;
    {                                      // method
      0x0008;                              // access
      #125;                                // name_index
      #6;                                  // descriptor_index
      [] {                                 // Attributes
        Attr(#119) {                       // Code
          2;                               // max_stack
          0;                               // max_locals
          Bytes[]{
            0x0A 0xB3 0x00 0x6F 0xB1;
          }
          [] {                             // Traps
          }                                // end of Traps
          [] {                             // Attributes
          }                                // end of Attributes
        }                                  // end of Code
      }                                    // end of Attributes
    }
  }                                        // end of Methods

  [] {                                     // Attributes
    Attr(#126) {                           // BootstrapMethods
      [] {                                 // bootstrap_methods
        {                                  // bootstrap_method
          #137;                            // bootstrap_method_ref
          [] {                             // bootstrap_arguments
            #127;
          }                                // bootstrap_arguments
        }                                  // bootstrap_method
        ;
        {                                  // bootstrap_method
          #137;                            // bootstrap_method_ref
          [] {                             // bootstrap_arguments
            #129;
          }                                // bootstrap_arguments
        }                                  // bootstrap_method
        ;
        {                                  // bootstrap_method
          #137;                            // bootstrap_method_ref
          [] {                             // bootstrap_arguments
            #131;
          }                                // bootstrap_arguments
        }                                  // bootstrap_method
        ;
        {                                  // bootstrap_method
          #137;                            // bootstrap_method_ref
          [] {                             // bootstrap_arguments
            #133;
          }                                // bootstrap_arguments
        }                                  // bootstrap_method
        ;
        {                                  // bootstrap_method
          #137;                            // bootstrap_method_ref
          [] {                             // bootstrap_arguments
            #135;
          }                                // bootstrap_arguments
        }                                  // bootstrap_method
      }
    }                                      // end of BootstrapMethods
    ;
    Attr(#143) {                           // InnerClasses
      [] {                                 // classes
         #144  #146  #148  25;
      }
    }                                      // end of InnerClasses
  }                                        // end of Attributes
}
