/*
 * Copyright (c) 2023, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 */

 // SourceDebugExtension has broken Utf 8 string.
 class org/openjdk/asmtools/transform/case7903454/data/Utf8CodeBroken01 {
  0xCAFEBABE;
  0;                             // minor version
  61;                            // version
  [185] {                        // Constant Pool
    ;                            // first element is empty
    String #80;                  // #1     at 0x0A
    String #137;                 // #2     at 0x0D
    String #159;                 // #3     at 0x10
    String #163;                 // #4     at 0x13
    String #115;                 // #5     at 0x16
    Field #109 #81;              // #6     at 0x19
    InvokeDynamic 0s #164;       // #7     at 0x1E
    InterfaceMethod #119 #101;   // #8     at 0x23
    Field #109 #68;              // #9     at 0x28
    Field #109 #116;             // #10     at 0x2D
    Method #87 #158;             // #11     at 0x32
    Method #109 #75;             // #12     at 0x37
    Method #31 #44;              // #13     at 0x3C
    Method #87 #61;              // #14     at 0x41
    Method #109 #134;            // #15     at 0x46
    Method #87 #123;             // #16     at 0x4B
    Field #109 #139;             // #17     at 0x50
    Method #165 #57;             // #18     at 0x55
    InvokeDynamic 1s #125;       // #19     at 0x5A
    InvokeDynamic 2s #179;       // #20     at 0x5F
    InvokeDynamic 3s #88;        // #21     at 0x64
    Method #31 #130;             // #22     at 0x69
    InterfaceMethod #47 #93;     // #23     at 0x6E
    InvokeDynamic 4s #88;        // #24     at 0x73
    Field #176 #171;             // #25     at 0x78
    Method #74 #95;              // #26     at 0x7D
    InvokeDynamic 5s #179;       // #27     at 0x82
    InterfaceMethod #119 #118;   // #28     at 0x87
    Method #31 #107;             // #29     at 0x8C
    Method #31 #177;             // #30     at 0x91
    class #117;                  // #31     at 0x96
    Method #31 #71;              // #32     at 0x99
    InvokeDynamic 6s #150;       // #33     at 0x9E
    Method #31 #132;             // #34     at 0xA3
    Method #128 #133;            // #35     at 0xA8
    Field #109 #96;              // #36     at 0xAD
    Utf8 "java/lang/Object";     // #37     at 0xB2
    Utf8 "makeConcatWithConstants"; // #38     at 0xC5
    NameAndType #49 #135;        // #39     at 0xDF
    NameAndType #59 #72;         // #40     at 0xE4
    Utf8 "()V";                  // #41     at 0xE9
    Utf8 "InnerClasses";         // #42     at 0xEF
    Utf8 "(Ljava/util/function/IntPredicate;)Ljava/util/stream/IntStream;"; // #43     at 0xFE
    NameAndType #183 #67;        // #44     at 0x0140
    Utf8 "<clinit>";             // #45     at 0x0145
    class #161;                  // #46     at 0x0150
    class #172;                  // #47     at 0x0153
    Utf8 "toString";             // #48     at 0x0156
    Utf8 "lambda$вычислитьМаленькиеБуквы$3"; // #49     at 0x0161
    MethodHandle 6b #90;         // #50     at 0x019B
    Utf8 "()Ljava/lang/String;"; // #51     at 0x019F
    Utf8 "<init>";               // #52     at 0x01B6
    Utf8 "(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"; // #53     at 0x01BF
    MethodHandle 6b #120;        // #54     at 0x028E
    MethodType #72;              // #55     at 0x0292
    String #160;                 // #56     at 0x0295
    NameAndType #52 #41;         // #57     at 0x0298
    Utf8 "org/openjdk/asmtools/transform/case7903454/data/Utf8CodeBroken01"; // #58     at 0x029D
    Utf8 "lambda$вычислитьМаленькиеБуквы$2"; // #59     at 0x02D8
    Utf8 "ქართულიენაAlphabet";   // #60     at 0x0312
    NameAndType #48 #135;        // #61     at 0x033B
    Utf8 "(I)Ljava/lang/Object;"; // #62     at 0x0340
    Utf8 "ΕλληνικάAlphabet";     // #63     at 0x0358
    Utf8 "(Ljava/lang/String;)V"; // #64     at 0x0373
    class #156;                  // #65     at 0x038B
    Utf8 "نتیجہ";                // #66     at 0x038E
    Utf8 "()I";                  // #67     at 0x039B
    NameAndType #180 #97;        // #68     at 0x03A1
    String #144;                 // #69     at 0x03A6
    Utf8 "collect";              // #70     at 0x03A9
    NameAndType #146 #162;       // #71     at 0x03B3
    Utf8 "(I)Z";                 // #72     at 0x03B8
    MethodHandle 6b #102;        // #73     at 0x03BF
    class #110;                  // #74     at 0x03C3
    NameAndType #106 #51;        // #75     at 0x03C6
    Utf8 "metafactory";          // #76     at 0x03CB
    Utf8 "SourceFile";           // #77     at 0x03D9
    MethodType #62;              // #78     at 0x03E6
    Utf8 "apply";                // #79     at 0x03E9
    Utf8 "Α α Β β Γ γ Δ δ Ε ε Ζ ζ Η η Θ θ Ι ι Κ κ Λ λ Μ μ Ν ν Ξ ξ Ο ο Π π Ρ ρ Σ σ/ς Τ τ Υ υ Φ φ Χ χ Ψ ψ Ω ω"; // #80     at 0x03F1
    NameAndType #60 #97;         // #81     at 0x0486
    Utf8 "mapToObj";             // #82     at 0x048B
    class #108;                  // #83     at 0x0496
    Utf8 "(Ljava/util/stream/Collector;)Ljava/lang/Object;"; // #84     at 0x0499
    NameAndType #38 #126;        // #85     at 0x04CC
    String #124;                 // #86     at 0x04D1
    class #145;                  // #87     at 0x04D4
    NameAndType #79 #153;        // #88     at 0x04D7
    MethodHandle 6b #147;        // #89     at 0x04DC
    Method #109 #98;             // #90     at 0x04E0
    Utf8 "(II)Ljava/lang/String;"; // #91     at 0x04E5
    NameAndType #76 #53;         // #92     at 0x04FE
    NameAndType #70 #84;         // #93     at 0x0503
    MethodType #135;             // #94     at 0x0508
    NameAndType #184 #151;       // #95     at 0x050B
    NameAndType #66 #97;         // #96     at 0x0510
    Utf8 "Ljava/lang/String;";   // #97     at 0x0515
    NameAndType #143 #135;       // #98     at 0x052A
    NameAndType #154 #72;        // #99     at 0x052F
    Utf8 "out";                  // #100     at 0x0534
    NameAndType #82 #121;        // #101     at 0x053A
    Method #109 #99;             // #102     at 0x053F
    Utf8 "java/lang/System";     // #103     at 0x0544
    Utf8 "test";                 // #104     at 0x0557
    Method #109 #39;             // #105     at 0x055E
    Utf8 "вычислитьБольшиеБуквы"; // #106     at 0x0563
    NameAndType #181 #135;       // #107     at 0x0590
    Utf8 "java/lang/invoke/StringConcatFactory"; // #108     at 0x0595
    class #58;                   // #109     at 0x05BC
    Utf8 "java/util/stream/Collectors"; // #110     at 0x05BF
    Utf8 "isUpperCase";          // #111     at 0x05DD
    Utf8 "()Ljava/util/function/IntPredicate;"; // #112     at 0x05EB
    Utf8 "вычислитьМаленькиеБуквы"; // #113     at 0x0611
    Utf8 "calculate";            // #114     at 0x0642
    Utf8 "A Á B C Č D Ď E É Ě F G H Ch I Í J K L M N Ň O Ó P Q R Ř S Š T Ť U Ú Ů V W X Y Ý Z Ž a á b c č d ď e é ě f g h ch i í j k l m n ň o ó p q r ř s š t ť u ú ů v w x y ý z ž"; // #115     at 0x064E
    NameAndType #63 #97;         // #116     at 0x0718
    Utf8 "java/lang/String";     // #117     at 0x071D
    NameAndType #173 #43;        // #118     at 0x0730
    class #178;                  // #119     at 0x0735
    Method #65 #92;              // #120     at 0x0738
    Utf8 "(Ljava/util/function/IntFunction;)Ljava/util/stream/Stream;"; // #121     at 0x073D
    Method #109 #40;             // #122     at 0x077B
    NameAndType #149 #72;        // #123     at 0x0780
    Utf8 "\u0001 \u0001";        // #124     at 0x0785
    NameAndType #38 #162;        // #125     at 0x078B
    Utf8 "(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;"; // #126     at 0x0790
    class #140;                  // #127     at 0x082B
    class #131;                  // #128     at 0x082E
    Utf8 "ČeštinaAlphabet";      // #129     at 0x0831
    NameAndType #136 #138;       // #130     at 0x0845
    Utf8 "java/io/PrintStream";  // #131     at 0x084A
    NameAndType #181 #91;        // #132     at 0x0860
    NameAndType #167 #64;        // #133     at 0x0865
    NameAndType #113 #51;        // #134     at 0x086A
    Utf8 "(I)Ljava/lang/String;"; // #135     at 0x086F
    Utf8 "isEmpty";              // #136     at 0x0887
    Utf8 "Ⴀ Ⴁ Ⴂ Ⴃ Ⴄ Ⴅ Ⴆ Ⴇ Ⴈ Ⴉ Ⴊ Ⴋ Ⴌ Ⴍ Ⴎ Ⴏ Ⴐ Ⴑ Ⴒ Ⴓ Ⴔ Ⴕ Ⴖ Ⴗ Ⴘ Ⴙ Ⴚ Ⴛ Ⴜ Ⴝ Ⴞ Ⴟ Ⴠ Ⴡ Ⴢ Ⴣ Ⴤ Ⴥ ა ბ გ დ ე ვ ზ თ ი კ ლ მ ნ ო პ ჟ რ ს ტ უ ფ ქ ღ ყ შ ჩ ც ძ წ ჭ ხ ჯ ჰ ჱ ჲ ჳ ჴ ჵ ჶ ჷ ჸ ჹ ჺ ჻ ჼ ჽ ჾ ჿ"; // #137     at 0x0891
    Utf8 "()Z";                  // #138     at 0x09EB
    NameAndType #129 #97;        // #139     at 0x09F1
    Utf8 "java/lang/invoke/MethodHandles"; // #140     at 0x09F6
    Utf8 "StackMapTable";        // #141     at 0x0A17
    MethodHandle 6b #122;        // #142     at 0x0A27
    Utf8 "lambda$вычислитьБольшиеБуквы$1"; // #143     at 0x0A2B
    Utf8 "\u0001\u0001\u0001";   // #144     at 0x0A61
    Utf8 "java/lang/Character";  // #145     at 0x0A67
    Utf8 "replaceAll";           // #146     at 0x0A7D
    Method #83 #85;              // #147     at 0x0A8A
    Utf8 "()Ljava/util/stream/IntStream;"; // #148     at 0x0A8F
    Utf8 "isLowerCase";          // #149     at 0x0AB0
    NameAndType #38 #169;        // #150     at 0x0ABE
    Utf8 "()Ljava/util/stream/Collector;"; // #151     at 0x0AC3
    MethodHandle 6b #105;        // #152     at 0x0AE4
    Utf8 "()Ljava/util/function/IntFunction;"; // #153     at 0x0AE8
    Utf8 "lambda$вычислитьБольшиеБуквы$0"; // #154     at 0x0B0D
    Utf8 "codePoints";           // #155     at 0x0B43
    Utf8 "java/lang/invoke/LambdaMetafactory"; // #156     at 0x0B50
    Utf8 "Utf8CodeBroken01.java";        // #157     at 0x0B75
    NameAndType #111 #72;        // #158     at 0x0B85
    Utf8 " ";                    // #159     at 0x0B8A
    Utf8 "\u0001\u0001";         // #160     at 0x0B8E
    Utf8 "java/lang/invoke/MethodHandles$Lookup"; // #161     at 0x0B93
    Utf8 "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"; // #162     at 0x0BBB
    Utf8 "";                     // #163     at 0x0BF6
    NameAndType #38 #166;        // #164     at 0x0BF9
    class #37;                   // #165     at 0x0BFE
    Utf8 "(ILjava/lang/String;)Ljava/lang/String;"; // #166     at 0x0C01
    Utf8 "println";              // #167     at 0x0C2B
    Utf8 "SourceDebugExtension"; // #168     at 0x0C35
    Utf8 "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"; // #169     at 0x0C4C
    Utf8 "Code";                 // #170     at 0x0C99
    NameAndType #100 #175;       // #171     at 0x0CA0
    Utf8 "java/util/stream/Stream"; // #172     at 0x0CA5
    Utf8 "filter";               // #173     at 0x0CBF
    Utf8 "Lookup";               // #174     at 0x0CC8
    Utf8 "Ljava/io/PrintStream;"; // #175     at 0x0CD1
    class #103;                  // #176     at 0x0CE9
    NameAndType #155 #148;       // #177     at 0x0CEC
    Utf8 "java/util/stream/IntStream"; // #178     at 0x0CF1
    NameAndType #104 #112;       // #179     at 0x0D0E
    Utf8 "line";                 // #180     at 0x0D13
    Utf8 "substring";            // #181     at 0x0D1A
    Utf8 "BootstrapMethods";     // #182     at 0x0D26
    Utf8 "length";               // #183     at 0x0D39
    Utf8 "joining";              // #184     at 0x0D42
  }                              // end of Constant Pool

  0x0021;                        // access [ ACC_PUBLIC, ACC_SUPER  ]
  #109;                          // this_cpx
  #165;                          // super_cpx

  [0] {                          // Interfaces
  }                              // end of Interfaces

  [5] {                          // Fields
    {                            // field at 0x0D56
      0x0008;                    // access
      #129;                      // name_index       : ČeštinaAlphabet
      #97;                       // descriptor_index : Ljava/lang/String;
      [0] {                      // Attributes
      }                          // end of Attributes
    }
    ;
    {                            // field at 0x0D5E
      0x0008;                    // access
      #60;                       // name_index       : ქართულიენაAlphabet
      #97;                       // descriptor_index : Ljava/lang/String;
      [0] {                      // Attributes
      }                          // end of Attributes
    }
    ;
    {                            // field at 0x0D66
      0x0008;                    // access
      #63;                       // name_index       : ΕλληνικάAlphabet
      #97;                       // descriptor_index : Ljava/lang/String;
      [0] {                      // Attributes
      }                          // end of Attributes
    }
    ;
    {                            // field at 0x0D6E
      0x0000;                    // access
      #180;                      // name_index       : line
      #97;                       // descriptor_index : Ljava/lang/String;
      [0] {                      // Attributes
      }                          // end of Attributes
    }
    ;
    {                            // field at 0x0D76
      0x0002;                    // access
      #66;                       // name_index       : نتیجہ
      #97;                       // descriptor_index : Ljava/lang/String;
      [0] {                      // Attributes
      }                          // end of Attributes
    }
  }                              // end of Fields

  [9] {                          // Methods
    {                            // method at 0x0D80
      0x0002;                    // access
      #106;                      // name_index       : вычислитьБольшиеБуквы
      #51;                       // descriptor_index : ()Ljava/lang/String;
      [1] {                      // Attributes
        Attr(#170, 51) {         // Code at 0x0D88
          2;                     // max_stack
          1;                     // max_locals
          Bytes[39]{
            0x2AB40009B6001EBA;
            0x00140000B9001C02;
            0x00BA00180000B900;
            0x080200B8001AB900;
            0x170200C0001FB0;
          }
          [0] {                  // Traps
          }                      // end of Traps
          [0] {                  // Attributes
          }                      // end of Attributes
        }                        // end of Code
      }                          // end of Attributes
    }
    ;
    {                            // method at 0x0DC1
      0x0002;                    // access
      #113;                      // name_index       : вычислитьМаленькиеБуквы
      #51;                       // descriptor_index : ()Ljava/lang/String;
      [1] {                      // Attributes
        Attr(#170, 51) {         // Code at 0x0DC9
          2;                     // max_stack
          1;                     // max_locals
          Bytes[39]{
            0x2AB40009B6001EBA;
            0x001B0000B9001C02;
            0x00BA00150000B900;
            0x080200B8001AB900;
            0x170200C0001FB0;
          }
          [0] {                  // Traps
          }                      // end of Traps
          [0] {                  // Attributes
          }                      // end of Attributes
        }                        // end of Code
      }                          // end of Attributes
    }
    ;
    {                            // method at 0x0E02
      0x0001;                    // access
      #114;                      // name_index       : calculate
      #67;                       // descriptor_index : ()I
      [1] {                      // Attributes
        Attr(#170, 85) {         // Code at 0x0E0A
          4;                     // max_stack
          2;                     // max_locals
          Bytes[64]{
            0x2AB40024B6001699;
            0x001F2A2AB6000C03;
            0x1014B600222AB600;
            0x0F105AB6001DBA00;
            0x130000B500242AB4;
            0x0024B6000D3CB200;
            0x191B2AB40024BA00;
            0x070000B600231BAC;
          }
          [0] {                  // Traps
          }                      // end of Traps
          [1] {                  // Attributes
            Attr(#141, 3) {      // StackMapTable at 0x0E5C
              [1] {              //
                38b;             // same_frame
              }
            }                    // end of StackMapTable
          }                      // end of Attributes
        }                        // end of Code
      }                          // end of Attributes
    }
    ;
    {                            // method at 0x0E65
      0x0001;                    // access
      #52;                       // name_index       : <init>
      #41;                       // descriptor_index : ()V
      [1] {                      // Attributes
        Attr(#170, 62) {         // Code at 0x0E6D
          6;                     // max_stack
          1;                     // max_locals
          Bytes[50]{
            0x2AB700122A1204B5;
            0x00242AB200111203;
            0x1204B60020B20006;
            0x12031204B60020B2;
            0x000A12031204B600;
            0x20BA00210000B500;
            0x09B1;
          }
          [0] {                  // Traps
          }                      // end of Traps
          [0] {                  // Attributes
          }                      // end of Attributes
        }                        // end of Code
      }                          // end of Attributes
    }
    ;
    {                            // method at 0x0EB1
      0x100A;                    // access
      #49;                       // name_index       : lambda$вычислитьМаленькиеБуквы$3
      #135;                      // descriptor_index : (I)Ljava/lang/String;
      [1] {                      // Attributes
        Attr(#170, 17) {         // Code at 0x0EB9
          1;                     // max_stack
          1;                     // max_locals
          Bytes[5]{
            0x1AB8000EB0;
          }
          [0] {                  // Traps
          }                      // end of Traps
          [0] {                  // Attributes
          }                      // end of Attributes
        }                        // end of Code
      }                          // end of Attributes
    }
    ;
    {                            // method at 0x0ED0
      0x100A;                    // access
      #59;                       // name_index       : lambda$вычислитьМаленькиеБуквы$2
      #72;                       // descriptor_index : (I)Z
      [1] {                      // Attributes
        Attr(#170, 17) {         // Code at 0x0ED8
          1;                     // max_stack
          1;                     // max_locals
          Bytes[5]{
            0x1AB80010AC;
          }
          [0] {                  // Traps
          }                      // end of Traps
          [0] {                  // Attributes
          }                      // end of Attributes
        }                        // end of Code
      }                          // end of Attributes
    }
    ;
    {                            // method at 0x0EEF
      0x100A;                    // access
      #143;                      // name_index       : lambda$вычислитьБольшиеБуквы$1
      #135;                      // descriptor_index : (I)Ljava/lang/String;
      [1] {                      // Attributes
        Attr(#170, 17) {         // Code at 0x0EF7
          1;                     // max_stack
          1;                     // max_locals
          Bytes[5]{
            0x1AB8000EB0;
          }
          [0] {                  // Traps
          }                      // end of Traps
          [0] {                  // Attributes
          }                      // end of Attributes
        }                        // end of Code
      }                          // end of Attributes
    }
    ;
    {                            // method at 0x0F0E
      0x100A;                    // access
      #154;                      // name_index       : lambda$вычислитьБольшиеБуквы$0
      #72;                       // descriptor_index : (I)Z
      [1] {                      // Attributes
        Attr(#170, 17) {         // Code at 0x0F16
          1;                     // max_stack
          1;                     // max_locals
          Bytes[5]{
            0x1AB8000BAC;
          }
          [0] {                  // Traps
          }                      // end of Traps
          [0] {                  // Attributes
          }                      // end of Attributes
        }                        // end of Code
      }                          // end of Attributes
    }
    ;
    {                            // method at 0x0F2D
      0x0008;                    // access
      #45;                       // name_index       : <clinit>
      #41;                       // descriptor_index : ()V
      [1] {                      // Attributes
        Attr(#170, 28) {         // Code at 0x0F35
          1;                     // max_stack
          0;                     // max_locals
          Bytes[16]{
            0x1205B300111202B3;
            0x00061201B3000AB1;
          }
          [0] {                  // Traps
          }                      // end of Traps
          [0] {                  // Attributes
          }                      // end of Attributes
        }                        // end of Code
      }                          // end of Attributes
    }
  }                              // end of Methods

  [4] {                          // Attributes
    Attr(#77, 2) {               // SourceFile at 0x0F59
      #157;
    }                            // end of SourceFile
    ;
    Attr(#168, 16) {             // SourceDebugExtension at 0x0F61
      // == The bytes do not represent a valid modified UTF-8 encoding of a Unicode string. ==
      0x00 0x0A 0x21 0xD0 0xA6 0xD0 0xB8 0xD1 0x82 0xD0 0xB0 0xD1 0x82 0xD0;
      0xB0 0x21;
    }                            // end of SourceDebugExtension
    ;
    Attr(#42, 10) {              // InnerClasses at 0x0F77
      [1] {                      // classes
        #46 #127 #174 25;        // at 0x0F87
      }
    }                            // end of InnerClasses
    ;
    Attr(#182, 60) {             // BootstrapMethods at 0x0F87
      [7] {                      // bootstrap_methods
        {                        // bootstrap_method
          #89;                   // bootstrap_method_ref
          [1] {                  // bootstrap_arguments
            #86;                 // at 0x0F95
          }                      // bootstrap_arguments
        }                        // bootstrap_method
        ;
        {                        // bootstrap_method
          #89;                   // bootstrap_method_ref
          [1] {                  // bootstrap_arguments
            #56;                 // at 0x0F9B
          }                      // bootstrap_arguments
        }                        // bootstrap_method
        ;
        {                        // bootstrap_method
          #54;                   // bootstrap_method_ref
          [3] {                  // bootstrap_arguments
            #55;                 // at 0x0FA1
            #73;                 // at 0x0FA3
            #55;                 // at 0x0FA5
          }                      // bootstrap_arguments
        }                        // bootstrap_method
        ;
        {                        // bootstrap_method
          #54;                   // bootstrap_method_ref
          [3] {                  // bootstrap_arguments
            #78;                 // at 0x0FAB
            #152;                // at 0x0FAD
            #94;                 // at 0x0FAF
          }                      // bootstrap_arguments
        }                        // bootstrap_method
        ;
        {                        // bootstrap_method
          #54;                   // bootstrap_method_ref
          [3] {                  // bootstrap_arguments
            #78;                 // at 0x0FB5
            #50;                 // at 0x0FB7
            #94;                 // at 0x0FB9
          }                      // bootstrap_arguments
        }                        // bootstrap_method
        ;
        {                        // bootstrap_method
          #54;                   // bootstrap_method_ref
          [3] {                  // bootstrap_arguments
            #55;                 // at 0x0FBF
            #142;                // at 0x0FC1
            #55;                 // at 0x0FC3
          }                      // bootstrap_arguments
        }                        // bootstrap_method
        ;
        {                        // bootstrap_method
          #89;                   // bootstrap_method_ref
          [1] {                  // bootstrap_arguments
            #69;                 // at 0x0FC9
          }                      // bootstrap_arguments
        }                        // bootstrap_method
      }
    }                            // end of BootstrapMethods
  }                              // end of Attributes
}                                // end of class org/openjdk/asmtools/transform/case7903454/data/Utf8CodeBroken01
